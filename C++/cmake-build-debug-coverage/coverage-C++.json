{
  "data": [
    {
      "files": [
        {
          "branches": [],
          "expansions": [],
          "filename": "/Users/tony/Documents/Project/LeeCode/C++/1.twoSum.cpp",
          "segments": [
            [
              51,
              55,
              0,
              true,
              true,
              false
            ],
            [
              61,
              6,
              0,
              false,
              false,
              false
            ]
          ],
          "summary": {
            "branches": {
              "count": 0,
              "covered": 0,
              "notcovered": 0,
              "percent": 0
            },
            "functions": {
              "count": 1,
              "covered": 0,
              "percent": 0
            },
            "instantiations": {
              "count": 1,
              "covered": 0,
              "percent": 0
            },
            "lines": {
              "count": 11,
              "covered": 0,
              "percent": 0
            },
            "regions": {
              "count": 1,
              "covered": 0,
              "notcovered": 1,
              "percent": 0
            }
          }
        },
        {
          "branches": [],
          "expansions": [],
          "filename": "/Users/tony/Documents/Project/LeeCode/C++/2.addTwoNumbers.cpp",
          "segments": [
            [
              46,
              40,
              0,
              true,
              true,
              false
            ],
            [
              46,
              42,
              0,
              false,
              false,
              false
            ],
            [
              47,
              45,
              0,
              true,
              true,
              false
            ],
            [
              47,
              47,
              0,
              false,
              false,
              false
            ],
            [
              48,
              58,
              0,
              true,
              true,
              false
            ],
            [
              48,
              60,
              0,
              false,
              false,
              false
            ],
            [
              53,
              57,
              0,
              true,
              true,
              false
            ],
            [
              78,
              6,
              0,
              false,
              false,
              false
            ],
            [
              81,
              55,
              0,
              true,
              true,
              false
            ],
            [
              96,
              6,
              0,
              false,
              false,
              false
            ],
            [
              98,
              49,
              0,
              true,
              true,
              false
            ],
            [
              106,
              6,
              0,
              false,
              false,
              false
            ]
          ],
          "summary": {
            "branches": {
              "count": 0,
              "covered": 0,
              "notcovered": 0,
              "percent": 0
            },
            "functions": {
              "count": 6,
              "covered": 0,
              "percent": 0
            },
            "instantiations": {
              "count": 6,
              "covered": 0,
              "percent": 0
            },
            "lines": {
              "count": 54,
              "covered": 0,
              "percent": 0
            },
            "regions": {
              "count": 6,
              "covered": 0,
              "notcovered": 6,
              "percent": 0
            }
          }
        },
        {
          "branches": [],
          "expansions": [],
          "filename": "/Users/tony/Documents/Project/LeeCode/C++/3.无重复字符的最长子串.cpp",
          "segments": [
            [
              40,
              44,
              0,
              true,
              true,
              false
            ],
            [
              61,
              6,
              0,
              false,
              false,
              false
            ]
          ],
          "summary": {
            "branches": {
              "count": 0,
              "covered": 0,
              "notcovered": 0,
              "percent": 0
            },
            "functions": {
              "count": 1,
              "covered": 0,
              "percent": 0
            },
            "instantiations": {
              "count": 1,
              "covered": 0,
              "percent": 0
            },
            "lines": {
              "count": 22,
              "covered": 0,
              "percent": 0
            },
            "regions": {
              "count": 1,
              "covered": 0,
              "notcovered": 1,
              "percent": 0
            }
          }
        },
        {
          "branches": [],
          "expansions": [],
          "filename": "/Users/tony/Documents/Project/LeeCode/C++/4.寻找两个正序数组的中位数.cpp",
          "segments": [
            [
              14,
              85,
              0,
              true,
              true,
              false
            ],
            [
              54,
              6,
              0,
              false,
              false,
              false
            ],
            [
              55,
              77,
              0,
              true,
              true,
              false
            ],
            [
              63,
              6,
              0,
              false,
              false,
              false
            ]
          ],
          "summary": {
            "branches": {
              "count": 0,
              "covered": 0,
              "notcovered": 0,
              "percent": 0
            },
            "functions": {
              "count": 2,
              "covered": 0,
              "percent": 0
            },
            "instantiations": {
              "count": 2,
              "covered": 0,
              "percent": 0
            },
            "lines": {
              "count": 50,
              "covered": 0,
              "percent": 0
            },
            "regions": {
              "count": 2,
              "covered": 0,
              "notcovered": 2,
              "percent": 0
            }
          }
        },
        {
          "branches": [
            [
              53,
              13,
              53,
              25,
              0,
              2,
              0,
              0,
              4
            ],
            [
              59,
              21,
              59,
              22,
              28,
              2,
              0,
              0,
              4
            ],
            [
              61,
              17,
              61,
              28,
              8,
              20,
              0,
              0,
              4
            ],
            [
              61,
              32,
              61,
              53,
              6,
              14,
              0,
              0,
              4
            ],
            [
              62,
              23,
              62,
              32,
              16,
              12,
              0,
              0,
              4
            ],
            [
              66,
              25,
              66,
              26,
              6,
              2,
              0,
              0,
              4
            ]
          ],
          "expansions": [],
          "filename": "/Users/tony/Documents/Project/LeeCode/C++/ZigZagConversion.cpp",
          "segments": [
            [
              51,
              43,
              2,
              true,
              true,
              false
            ],
            [
              52,
              1,
              0,
              false,
              true,
              false
            ],
            [
              52,
              1,
              2,
              true,
              false,
              false
            ],
            [
              53,
              13,
              2,
              true,
              true,
              false
            ],
            [
              53,
              25,
              2,
              true,
              false,
              false
            ],
            [
              53,
              26,
              0,
              true,
              false,
              true
            ],
            [
              53,
              27,
              0,
              true,
              true,
              false
            ],
            [
              53,
              35,
              2,
              true,
              false,
              true
            ],
            [
              54,
              1,
              0,
              false,
              true,
              false
            ],
            [
              54,
              1,
              2,
              true,
              false,
              true
            ],
            [
              55,
              9,
              2,
              true,
              true,
              false
            ],
            [
              58,
              1,
              0,
              false,
              true,
              false
            ],
            [
              58,
              1,
              2,
              true,
              false,
              false
            ],
            [
              59,
              25,
              28,
              true,
              false,
              true
            ],
            [
              59,
              26,
              28,
              true,
              true,
              false
            ],
            [
              61,
              17,
              28,
              true,
              true,
              false
            ],
            [
              61,
              28,
              28,
              true,
              false,
              false
            ],
            [
              61,
              32,
              20,
              true,
              true,
              false
            ],
            [
              61,
              53,
              28,
              true,
              false,
              false
            ],
            [
              61,
              54,
              14,
              true,
              false,
              true
            ],
            [
              61,
              55,
              14,
              true,
              true,
              false
            ],
            [
              61,
              77,
              28,
              true,
              false,
              false
            ],
            [
              62,
              33,
              16,
              true,
              false,
              true
            ],
            [
              62,
              35,
              16,
              true,
              true,
              false
            ],
            [
              62,
              36,
              28,
              true,
              false,
              false
            ],
            [
              62,
              39,
              12,
              true,
              true,
              false
            ],
            [
              62,
              41,
              28,
              true,
              false,
              false
            ],
            [
              63,
              10,
              2,
              true,
              false,
              false
            ],
            [
              64,
              1,
              0,
              false,
              true,
              false
            ],
            [
              64,
              1,
              2,
              true,
              false,
              false
            ],
            [
              66,
              32,
              6,
              true,
              false,
              true
            ],
            [
              66,
              33,
              6,
              true,
              true,
              false
            ],
            [
              66,
              43,
              2,
              true,
              false,
              false
            ],
            [
              68,
              6,
              0,
              false,
              false,
              false
            ],
            [
              71,
              34,
              1,
              true,
              true,
              false
            ],
            [
              77,
              2,
              0,
              false,
              false,
              false
            ]
          ],
          "summary": {
            "branches": {
              "count": 12,
              "covered": 11,
              "notcovered": 1,
              "percent": 91.666666666666657
            },
            "functions": {
              "count": 2,
              "covered": 2,
              "percent": 100
            },
            "instantiations": {
              "count": 2,
              "covered": 2,
              "percent": 100
            },
            "lines": {
              "count": 21,
              "covered": 21,
              "percent": 100
            },
            "regions": {
              "count": 13,
              "covered": 12,
              "notcovered": 1,
              "percent": 92.307692307692307
            }
          }
        },
        {
          "branches": [],
          "expansions": [],
          "filename": "/Users/tony/Documents/Project/LeeCode/C++/最长回文子串.cpp",
          "segments": [
            [
              41,
              40,
              0,
              true,
              true,
              false
            ],
            [
              84,
              6,
              0,
              false,
              false,
              false
            ]
          ],
          "summary": {
            "branches": {
              "count": 0,
              "covered": 0,
              "notcovered": 0,
              "percent": 0
            },
            "functions": {
              "count": 1,
              "covered": 0,
              "percent": 0
            },
            "instantiations": {
              "count": 1,
              "covered": 0,
              "percent": 0
            },
            "lines": {
              "count": 44,
              "covered": 0,
              "percent": 0
            },
            "regions": {
              "count": 1,
              "covered": 0,
              "notcovered": 1,
              "percent": 0
            }
          }
        }
      ],
      "functions": [
        {
          "branches": [],
          "count": 0,
          "filenames": [
            "/Users/tony/Documents/Project/LeeCode/C++/1.twoSum.cpp"
          ],
          "name": "_ZN8Solution6twoSumERNSt3__16vectorIiNS0_9allocatorIiEEEEi",
          "regions": [
            [
              51,
              55,
              61,
              6,
              0,
              0,
              0,
              0
            ]
          ]
        },
        {
          "branches": [],
          "count": 0,
          "filenames": [
            "/Users/tony/Documents/Project/LeeCode/C++/2.addTwoNumbers.cpp"
          ],
          "name": "_ZN8ListNodeC2Ev",
          "regions": [
            [
              46,
              40,
              46,
              42,
              0,
              0,
              0,
              0
            ]
          ]
        },
        {
          "branches": [],
          "count": 0,
          "filenames": [
            "/Users/tony/Documents/Project/LeeCode/C++/2.addTwoNumbers.cpp"
          ],
          "name": "_ZN8ListNodeC2Ei",
          "regions": [
            [
              47,
              45,
              47,
              47,
              0,
              0,
              0,
              0
            ]
          ]
        },
        {
          "branches": [],
          "count": 0,
          "filenames": [
            "/Users/tony/Documents/Project/LeeCode/C++/2.addTwoNumbers.cpp"
          ],
          "name": "_ZN8ListNodeC2EiPS_",
          "regions": [
            [
              48,
              58,
              48,
              60,
              0,
              0,
              0,
              0
            ]
          ]
        },
        {
          "branches": [],
          "count": 0,
          "filenames": [
            "/Users/tony/Documents/Project/LeeCode/C++/2.addTwoNumbers.cpp"
          ],
          "name": "_ZN8Solution13addTwoNumbersEP8ListNodeS1_",
          "regions": [
            [
              53,
              57,
              78,
              6,
              0,
              0,
              0,
              0
            ]
          ]
        },
        {
          "branches": [],
          "count": 0,
          "filenames": [
            "/Users/tony/Documents/Project/LeeCode/C++/2.addTwoNumbers.cpp"
          ],
          "name": "_ZN8Solution11addListNodeEP8ListNodei",
          "regions": [
            [
              81,
              55,
              96,
              6,
              0,
              0,
              0,
              0
            ]
          ]
        },
        {
          "branches": [],
          "count": 0,
          "filenames": [
            "/Users/tony/Documents/Project/LeeCode/C++/2.addTwoNumbers.cpp"
          ],
          "name": "_ZN8Solution5printEP8ListNode",
          "regions": [
            [
              98,
              49,
              106,
              6,
              0,
              0,
              0,
              0
            ]
          ]
        },
        {
          "branches": [],
          "count": 0,
          "filenames": [
            "/Users/tony/Documents/Project/LeeCode/C++/3.无重复字符的最长子串.cpp"
          ],
          "name": "_ZN8Solution24lengthOfLongestSubstringENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE",
          "regions": [
            [
              40,
              44,
              61,
              6,
              0,
              0,
              0,
              0
            ]
          ]
        },
        {
          "branches": [],
          "count": 0,
          "filenames": [
            "/Users/tony/Documents/Project/LeeCode/C++/4.寻找两个正序数组的中位数.cpp"
          ],
          "name": "_ZN8Solution13getKthElementERKNSt3__16vectorIiNS0_9allocatorIiEEEES6_i",
          "regions": [
            [
              14,
              85,
              54,
              6,
              0,
              0,
              0,
              0
            ]
          ]
        },
        {
          "branches": [],
          "count": 0,
          "filenames": [
            "/Users/tony/Documents/Project/LeeCode/C++/4.寻找两个正序数组的中位数.cpp"
          ],
          "name": "_ZN8Solution22findMedianSortedArraysERNSt3__16vectorIiNS0_9allocatorIiEEEES5_",
          "regions": [
            [
              55,
              77,
              63,
              6,
              0,
              0,
              0,
              0
            ]
          ]
        },
        {
          "branches": [],
          "count": 1,
          "filenames": [
            "/Users/tony/Documents/Project/LeeCode/C++/ZigZagConversion.cpp"
          ],
          "name": "main",
          "regions": [
            [
              71,
              34,
              77,
              2,
              1,
              0,
              0,
              0
            ]
          ]
        },
        {
          "branches": [
            [
              53,
              13,
              53,
              25,
              0,
              2,
              0,
              0,
              4
            ],
            [
              59,
              21,
              59,
              22,
              28,
              2,
              0,
              0,
              4
            ],
            [
              61,
              17,
              61,
              28,
              8,
              20,
              0,
              0,
              4
            ],
            [
              61,
              32,
              61,
              53,
              6,
              14,
              0,
              0,
              4
            ],
            [
              62,
              23,
              62,
              32,
              16,
              12,
              0,
              0,
              4
            ],
            [
              66,
              25,
              66,
              26,
              6,
              2,
              0,
              0,
              4
            ]
          ],
          "count": 2,
          "filenames": [
            "/Users/tony/Documents/Project/LeeCode/C++/ZigZagConversion.cpp"
          ],
          "name": "_ZN9Solution57convertENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi",
          "regions": [
            [
              51,
              43,
              68,
              6,
              2,
              0,
              0,
              0
            ],
            [
              52,
              1,
              52,
              1,
              0,
              0,
              0,
              2
            ],
            [
              53,
              13,
              53,
              25,
              2,
              0,
              0,
              0
            ],
            [
              53,
              26,
              53,
              27,
              0,
              0,
              0,
              3
            ],
            [
              53,
              27,
              53,
              35,
              0,
              0,
              0,
              0
            ],
            [
              53,
              35,
              55,
              9,
              2,
              0,
              0,
              3
            ],
            [
              54,
              1,
              54,
              1,
              0,
              0,
              0,
              2
            ],
            [
              55,
              9,
              68,
              6,
              2,
              0,
              0,
              0
            ],
            [
              58,
              1,
              58,
              1,
              0,
              0,
              0,
              2
            ],
            [
              59,
              25,
              59,
              26,
              28,
              0,
              0,
              3
            ],
            [
              59,
              26,
              63,
              10,
              28,
              0,
              0,
              0
            ],
            [
              61,
              17,
              61,
              28,
              28,
              0,
              0,
              0
            ],
            [
              61,
              17,
              61,
              53,
              28,
              0,
              0,
              0
            ],
            [
              61,
              32,
              61,
              53,
              20,
              0,
              0,
              0
            ],
            [
              61,
              54,
              61,
              55,
              14,
              0,
              0,
              3
            ],
            [
              61,
              55,
              61,
              77,
              14,
              0,
              0,
              0
            ],
            [
              62,
              33,
              62,
              35,
              16,
              0,
              0,
              3
            ],
            [
              62,
              35,
              62,
              36,
              16,
              0,
              0,
              0
            ],
            [
              62,
              39,
              62,
              41,
              12,
              0,
              0,
              0
            ],
            [
              64,
              1,
              64,
              1,
              0,
              0,
              0,
              2
            ],
            [
              66,
              32,
              66,
              33,
              6,
              0,
              0,
              3
            ],
            [
              66,
              33,
              66,
              43,
              6,
              0,
              0,
              0
            ]
          ]
        },
        {
          "branches": [],
          "count": 0,
          "filenames": [
            "/Users/tony/Documents/Project/LeeCode/C++/最长回文子串.cpp"
          ],
          "name": "_ZN9Solution417longestPalindromeENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE",
          "regions": [
            [
              41,
              40,
              84,
              6,
              0,
              0,
              0,
              0
            ]
          ]
        }
      ],
      "totals": {
        "branches": {
          "count": 12,
          "covered": 11,
          "notcovered": 1,
          "percent": 91.666666666666657
        },
        "functions": {
          "count": 13,
          "covered": 2,
          "percent": 15.384615384615385
        },
        "instantiations": {
          "count": 13,
          "covered": 2,
          "percent": 15.384615384615385
        },
        "lines": {
          "count": 202,
          "covered": 21,
          "percent": 10.396039603960396
        },
        "regions": {
          "count": 24,
          "covered": 12,
          "notcovered": 12,
          "percent": 50
        }
      }
    }
  ],
  "type": "llvm.coverage.json.export",
  "version": "2.0.1"
}